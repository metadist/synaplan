<?php
/**
 * API Keys Migration Script
 *
 * This script migrates API keys from the legacy .keys directory structure
 * to a modern .env file format suitable for open source distribution.
 *
 * Usage: php migrate_keys.php
 */

echo "=== Synaplan API Keys Migration ===\n";
echo "This script will convert your .keys files to a .env file\n\n";

$keysDir = __DIR__ . '/.keys';
$envFile = __DIR__ . '/.env';

// Define the mapping between files and environment variables
$keyMapping = [
    '.keys/.openai.txt' => 'OPENAI_API_KEY',
    '.keys/.groqkey.txt' => 'GROQ_API_KEY',
    '.keys/.googlegemini.txt' => 'GOOGLE_GEMINI_API_KEY',
    '.keys/.anthropic.txt' => 'ANTHROPIC_API_KEY',
    '.keys/.thehive.txt' => 'THEHIVE_API_KEY',
    '.keys/.11labs.txt' => 'ELEVENLABS_API_KEY',
    '.keys/.bravekey.txt' => 'BRAVE_SEARCH_API_KEY',
    '.keys/.watoken.txt' => 'WHATSAPP_TOKEN',
    '.keys/.aws.txt' => 'AWS_CREDENTIALS',
];

// Check if .keys directory exists
if (!is_dir($keysDir)) {
    echo "❌ .keys directory not found. Nothing to migrate.\n";
    exit(1);
}

// Check if .env already exists
if (file_exists($envFile)) {
    echo '⚠️  .env file already exists. Do you want to overwrite it? (y/N): ';
    $handle = fopen('php://stdin', 'r');
    $answer = strtolower(trim(fgets($handle)));
    fclose($handle);

    if ($answer !== 'y' && $answer !== 'yes') {
        echo "Migration cancelled.\n";
        exit(0);
    }
}

$envContent = "# Environment Configuration for Synaplan\n";
$envContent .= '# Generated by migration script on ' . date('Y-m-d H:i:s') . "\n\n";

// Add application configuration
$envContent .= "# Application Environment\n";
$envContent .= "APP_ENV=development\n";
$envContent .= "APP_DEBUG=true\n";
$envContent .= "APP_URL=http://localhost/synaplan.com/web/\n\n";

// Add database configuration template
$envContent .= "# Database Configuration\n";
$envContent .= "DB_HOST=localhost\n";
$envContent .= "DB_NAME=synaplan\n";
$envContent .= "DB_USER=your_db_user\n";
$envContent .= "DB_PASSWORD=your_db_password\n\n";

$envContent .= "# API Service Keys\n";

$foundKeys = [];
$missingKeys = [];

foreach ($keyMapping as $filePath => $envVar) {
    $fullPath = __DIR__ . '/' . $filePath;

    if (file_exists($fullPath)) {
        $keyValue = trim(file_get_contents($fullPath));
        if (!empty($keyValue)) {
            $envContent .= "$envVar=$keyValue\n";
            $foundKeys[] = $envVar;
            echo "✅ Found key: $envVar\n";
        } else {
            $envContent .= "# $envVar=your_api_key_here\n";
            $missingKeys[] = $envVar;
            echo "⚠️  Empty key file: $filePath\n";
        }
    } else {
        $envContent .= "# $envVar=your_api_key_here\n";
        $missingKeys[] = $envVar;
        echo "⚠️  Missing key file: $filePath\n";
    }
}

// Write the .env file
if (file_put_contents($envFile, $envContent) !== false) {
    echo "\n✅ Successfully created .env file!\n\n";

    echo "Migration Summary:\n";
    echo '- Found and migrated: ' . count($foundKeys) . " keys\n";
    echo '- Missing or empty: ' . count($missingKeys) . " keys\n\n";

    if (!empty($missingKeys)) {
        echo "Please manually add the following keys to your .env file:\n";
        foreach ($missingKeys as $key) {
            echo "  - $key\n";
        }
        echo "\n";
    }

    echo "Next steps:\n";
    echo "1. Review the generated .env file\n";
    echo "2. Add any missing API keys\n";
    echo "3. Test your application\n";
    echo "4. Consider backing up your .keys directory before removing it\n";
    echo "5. Add .env to your .gitignore (already done)\n\n";

    echo "The new API key system provides:\n";
    echo "- ✅ Centralized key management\n";
    echo "- ✅ Environment variable support\n";
    echo "- ✅ Open source friendly (keys not in repository)\n";
    echo "- ✅ Backward compatibility with existing .keys files\n\n";
} else {
    echo "❌ Failed to create .env file. Check permissions.\n";
    exit(1);
}

echo "Migration completed successfully! 🎉\n";
?> 