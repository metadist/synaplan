# Integrating recaptcha3 from scratch

The key is in my .env file and can be set like the other API keys. 
The name is: RECAPTCHA3

Here is the code to integrate it into 

. login
. password lost
. registration

pages:

frontend/c_login.php
frontend/c_register.php
frontend/c_lostpw.php

## Frontend Examples:

<!-- in <head> -->
<script src="https://www.google.com/recaptcha/api.js?render=YOUR_SITE_KEY"></script>

<!-- im Body: ein Formular -->
<form id="loginForm" method="post" action="/verify.php">
  <input name="username">
  <input name="password" type="password">
  <input type="hidden" name="g-recaptcha-response" id="g-recaptcha-response">
  <button type="submit">Absenden</button>
</form>

<script>
const SITE_KEY = 'YOUR_SITE_KEY';
document.getElementById('loginForm').addEventListener('submit', function(e){
  e.preventDefault(); // Token holen, dann absenden
  grecaptcha.ready(function(){
    grecaptcha.execute(SITE_KEY, {action: 'login'}).then(function(token){
      document.getElementById('g-recaptcha-response').value = token;
      e.target.submit();
    });
  });
});
</script>


## Backend
<?php
// Kurzfunktion zur Verifizierung
function verify_recaptcha(string $token, string $secret, string $expectedAction = '', float $minScore = 0.5): array {
    $url = 'https://www.google.com/recaptcha/api/siteverify';
    $data = http_build_query(['secret' => $secret, 'response' => $token]);

    $opts = ['http' => [
        'method'  => 'POST',
        'header'  => "Content-Type: application/x-www-form-urlencoded\r\n",
        'content' => $data
    ]];
    $context  = stream_context_create($opts);
    $result = file_get_contents($url, false, $context);
    if ($result === false) return ['success' => false, 'error' => 'no-response'];

    $res = json_decode($result, true);
    if (!isset($res['success']) || !$res['success']) return $res + ['success' => false];

    // Optionale zusätzliche Prüfungen
    if ($expectedAction && (!isset($res['action']) || $res['action'] !== $expectedAction)) {
        return ['success' => false, 'reason' => 'wrong-action', 'score' => $res['score'] ?? null];
    }
    if (($res['score'] ?? 0) < $minScore) {
        return ['success' => false, 'reason' => 'low-score', 'score' => $res['score']];
    }
    return ['success' => true, 'score' => $res['score']];
}

// Verwendung
$token = $_POST['g-recaptcha-response'] ?? '';
$secret = 'YOUR_SECRET_KEY';
$check = verify_recaptcha($token, $secret, 'login', 0.5);

if ($check['success']) {
    // valid — weiter mit Login/Verarbeitung
    echo "OK (score={$check['score']})";
} else {
    // abweisen / weitere Prüfung / Logging
    http_response_code(403);
    echo "Captcha failed: " . ($check['reason'] ?? 'unknown');
}


