<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc_service.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;.. cpp:var:: message InferResponseStatistics
 *&#64;&#64;
 *&#64;&#64;   Statistics per response.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.InferResponseStatistics</code>
 */
class InferResponseStatistics extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration compute_infer
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration to compute a response.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration compute_infer = 1;</code>
     */
    protected $compute_infer = null;
    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration compute_output
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration to extract the output tensors of a
     *&#64;&#64;     response.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration compute_output = 2;</code>
     */
    protected $compute_output = null;
    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration success
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration for successful responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration success = 3;</code>
     */
    protected $success = null;
    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration fail
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration for failed responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration fail = 4;</code>
     */
    protected $fail = null;
    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration empty_response
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration for empty responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration empty_response = 5;</code>
     */
    protected $empty_response = null;
    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration cancel
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration, for cleaning up resources held by
     *&#64;&#64;     a cancelled request, for cancelled responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration cancel = 6;</code>
     */
    protected $cancel = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Inference\StatisticDuration $compute_infer
     *          &#64;&#64;  .. cpp:var:: StatisticDuration compute_infer
     *          &#64;&#64;
     *          &#64;&#64;     The count and cumulative duration to compute a response.
     *          &#64;&#64;
     *     @type \Inference\StatisticDuration $compute_output
     *          &#64;&#64;  .. cpp:var:: StatisticDuration compute_output
     *          &#64;&#64;
     *          &#64;&#64;     The count and cumulative duration to extract the output tensors of a
     *          &#64;&#64;     response.
     *          &#64;&#64;
     *     @type \Inference\StatisticDuration $success
     *          &#64;&#64;  .. cpp:var:: StatisticDuration success
     *          &#64;&#64;
     *          &#64;&#64;     The count and cumulative duration for successful responses.
     *          &#64;&#64;
     *     @type \Inference\StatisticDuration $fail
     *          &#64;&#64;  .. cpp:var:: StatisticDuration fail
     *          &#64;&#64;
     *          &#64;&#64;     The count and cumulative duration for failed responses.
     *          &#64;&#64;
     *     @type \Inference\StatisticDuration $empty_response
     *          &#64;&#64;  .. cpp:var:: StatisticDuration empty_response
     *          &#64;&#64;
     *          &#64;&#64;     The count and cumulative duration for empty responses.
     *          &#64;&#64;
     *     @type \Inference\StatisticDuration $cancel
     *          &#64;&#64;  .. cpp:var:: StatisticDuration cancel
     *          &#64;&#64;
     *          &#64;&#64;     The count and cumulative duration, for cleaning up resources held by
     *          &#64;&#64;     a cancelled request, for cancelled responses.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GrpcService::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration compute_infer
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration to compute a response.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration compute_infer = 1;</code>
     * @return \Inference\StatisticDuration
     */
    public function getComputeInfer()
    {
        return $this->compute_infer;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration compute_infer
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration to compute a response.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration compute_infer = 1;</code>
     * @param \Inference\StatisticDuration $var
     * @return $this
     */
    public function setComputeInfer($var)
    {
        GPBUtil::checkMessage($var, \Inference\StatisticDuration::class);
        $this->compute_infer = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration compute_output
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration to extract the output tensors of a
     *&#64;&#64;     response.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration compute_output = 2;</code>
     * @return \Inference\StatisticDuration
     */
    public function getComputeOutput()
    {
        return $this->compute_output;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration compute_output
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration to extract the output tensors of a
     *&#64;&#64;     response.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration compute_output = 2;</code>
     * @param \Inference\StatisticDuration $var
     * @return $this
     */
    public function setComputeOutput($var)
    {
        GPBUtil::checkMessage($var, \Inference\StatisticDuration::class);
        $this->compute_output = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration success
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration for successful responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration success = 3;</code>
     * @return \Inference\StatisticDuration
     */
    public function getSuccess()
    {
        return $this->success;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration success
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration for successful responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration success = 3;</code>
     * @param \Inference\StatisticDuration $var
     * @return $this
     */
    public function setSuccess($var)
    {
        GPBUtil::checkMessage($var, \Inference\StatisticDuration::class);
        $this->success = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration fail
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration for failed responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration fail = 4;</code>
     * @return \Inference\StatisticDuration
     */
    public function getFail()
    {
        return $this->fail;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration fail
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration for failed responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration fail = 4;</code>
     * @param \Inference\StatisticDuration $var
     * @return $this
     */
    public function setFail($var)
    {
        GPBUtil::checkMessage($var, \Inference\StatisticDuration::class);
        $this->fail = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration empty_response
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration for empty responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration empty_response = 5;</code>
     * @return \Inference\StatisticDuration
     */
    public function getEmptyResponse()
    {
        return $this->empty_response;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration empty_response
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration for empty responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration empty_response = 5;</code>
     * @param \Inference\StatisticDuration $var
     * @return $this
     */
    public function setEmptyResponse($var)
    {
        GPBUtil::checkMessage($var, \Inference\StatisticDuration::class);
        $this->empty_response = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration cancel
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration, for cleaning up resources held by
     *&#64;&#64;     a cancelled request, for cancelled responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration cancel = 6;</code>
     * @return \Inference\StatisticDuration
     */
    public function getCancel()
    {
        return $this->cancel;
    }

    /**
     *&#64;&#64;  .. cpp:var:: StatisticDuration cancel
     *&#64;&#64;
     *&#64;&#64;     The count and cumulative duration, for cleaning up resources held by
     *&#64;&#64;     a cancelled request, for cancelled responses.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.StatisticDuration cancel = 6;</code>
     * @param \Inference\StatisticDuration $var
     * @return $this
     */
    public function setCancel($var)
    {
        GPBUtil::checkMessage($var, \Inference\StatisticDuration::class);
        $this->cancel = $var;

        return $this;
    }

}

