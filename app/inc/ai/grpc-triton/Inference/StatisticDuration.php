<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc_service.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;.. cpp:var:: message StatisticDuration
 *&#64;&#64;
 *&#64;&#64;   Statistic recording a cumulative duration metric.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.StatisticDuration</code>
 */
class StatisticDuration extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;  .. cpp:var:: uint64 count
     *&#64;&#64;
     *&#64;&#64;     Cumulative number of times this metric occurred.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 count = 1;</code>
     */
    protected $count = 0;
    /**
     *&#64;&#64;  .. cpp:var:: uint64 total_time_ns
     *&#64;&#64;
     *&#64;&#64;     Total collected duration of this metric in nanoseconds.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 ns = 2;</code>
     */
    protected $ns = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int|string $count
     *          &#64;&#64;  .. cpp:var:: uint64 count
     *          &#64;&#64;
     *          &#64;&#64;     Cumulative number of times this metric occurred.
     *          &#64;&#64;
     *     @type int|string $ns
     *          &#64;&#64;  .. cpp:var:: uint64 total_time_ns
     *          &#64;&#64;
     *          &#64;&#64;     Total collected duration of this metric in nanoseconds.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GrpcService::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint64 count
     *&#64;&#64;
     *&#64;&#64;     Cumulative number of times this metric occurred.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 count = 1;</code>
     * @return int|string
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint64 count
     *&#64;&#64;
     *&#64;&#64;     Cumulative number of times this metric occurred.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 count = 1;</code>
     * @param int|string $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkUint64($var);
        $this->count = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint64 total_time_ns
     *&#64;&#64;
     *&#64;&#64;     Total collected duration of this metric in nanoseconds.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 ns = 2;</code>
     * @return int|string
     */
    public function getNs()
    {
        return $this->ns;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint64 total_time_ns
     *&#64;&#64;
     *&#64;&#64;     Total collected duration of this metric in nanoseconds.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 ns = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setNs($var)
    {
        GPBUtil::checkUint64($var);
        $this->ns = $var;

        return $this;
    }

}

