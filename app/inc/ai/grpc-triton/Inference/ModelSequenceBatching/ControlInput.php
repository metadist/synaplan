<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model_config.proto

namespace Inference\ModelSequenceBatching;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;  .. cpp:var:: message ControlInput
 *&#64;&#64;
 *&#64;&#64;     The sequence control values to communicate by a model input.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.ModelSequenceBatching.ControlInput</code>
 */
class ControlInput extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;    .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;       The name of the model input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     *&#64;&#64;    .. cpp:var:: Control control (repeated)
     *&#64;&#64;
     *&#64;&#64;       The control value(s) that should be communicated to the
     *&#64;&#64;       model using this model input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated .inference.ModelSequenceBatching.Control control = 2;</code>
     */
    private $control;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *          &#64;&#64;    .. cpp:var:: string name
     *          &#64;&#64;
     *          &#64;&#64;       The name of the model input.
     *          &#64;&#64;
     *     @type \Inference\ModelSequenceBatching\Control[]|\Google\Protobuf\Internal\RepeatedField $control
     *          &#64;&#64;    .. cpp:var:: Control control (repeated)
     *          &#64;&#64;
     *          &#64;&#64;       The control value(s) that should be communicated to the
     *          &#64;&#64;       model using this model input.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModelConfig::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;    .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;       The name of the model input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     *&#64;&#64;    .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;       The name of the model input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: Control control (repeated)
     *&#64;&#64;
     *&#64;&#64;       The control value(s) that should be communicated to the
     *&#64;&#64;       model using this model input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated .inference.ModelSequenceBatching.Control control = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getControl()
    {
        return $this->control;
    }

    /**
     *&#64;&#64;    .. cpp:var:: Control control (repeated)
     *&#64;&#64;
     *&#64;&#64;       The control value(s) that should be communicated to the
     *&#64;&#64;       model using this model input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated .inference.ModelSequenceBatching.Control control = 2;</code>
     * @param \Inference\ModelSequenceBatching\Control[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setControl($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Inference\ModelSequenceBatching\Control::class);
        $this->control = $arr;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ControlInput::class, \Inference\ModelSequenceBatching_ControlInput::class);

