<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model_config.proto

namespace Inference\ModelEnsembling;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;  .. cpp:var:: message Step
 *&#64;&#64;
 *&#64;&#64;     Each step specifies a model included in the ensemble,
 *&#64;&#64;     maps ensemble tensor names to the model input tensors,
 *&#64;&#64;     and maps model output tensors to ensemble tensor names
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.ModelEnsembling.Step</code>
 */
class Step extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;  .. cpp:var:: string model_name
     *&#64;&#64;
     *&#64;&#64;     The name of the model to execute for this step of the ensemble.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string model_name = 1;</code>
     */
    protected $model_name = '';
    /**
     *&#64;&#64;  .. cpp:var:: int64 model_version
     *&#64;&#64;
     *&#64;&#64;     The version of the model to use for inference. If -1
     *&#64;&#64;     the latest/most-recent version of the model is used.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 model_version = 2;</code>
     */
    protected $model_version = 0;
    /**
     *&#64;&#64;  .. cpp:var:: map<string,string> input_map
     *&#64;&#64;
     *&#64;&#64;     Map from name of an input tensor on this step's model to ensemble
     *&#64;&#64;     tensor name. The ensemble tensor must have the same data type and
     *&#64;&#64;     shape as the model input. Each model input must be assigned to
     *&#64;&#64;     one ensemble tensor, but the same ensemble tensor can be assigned
     *&#64;&#64;     to multiple model inputs.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>map<string, string> input_map = 3;</code>
     */
    private $input_map;
    /**
     *&#64;&#64;  .. cpp:var:: map<string,string> output_map
     *&#64;&#64;
     *&#64;&#64;     Map from name of an output tensor on this step's model to ensemble
     *&#64;&#64;     tensor name. The data type and shape of the ensemble tensor will
     *&#64;&#64;     be inferred from the model output. It is optional to assign all
     *&#64;&#64;     model outputs to ensemble tensors. One ensemble tensor name
     *&#64;&#64;     can appear in an output map only once.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>map<string, string> output_map = 4;</code>
     */
    private $output_map;
    /**
     *&#64;&#64;  .. cpp:var:: string model_namespace
     *&#64;&#64;
     *&#64;&#64;     [RESERVED] currently this field is reserved for internal use, users
     *&#64;&#64;     must not set any value to this field to avoid unexpected behavior.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string model_namespace = 5;</code>
     */
    protected $model_namespace = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $model_name
     *          &#64;&#64;  .. cpp:var:: string model_name
     *          &#64;&#64;
     *          &#64;&#64;     The name of the model to execute for this step of the ensemble.
     *          &#64;&#64;
     *     @type int|string $model_version
     *          &#64;&#64;  .. cpp:var:: int64 model_version
     *          &#64;&#64;
     *          &#64;&#64;     The version of the model to use for inference. If -1
     *          &#64;&#64;     the latest/most-recent version of the model is used.
     *          &#64;&#64;
     *     @type array|\Google\Protobuf\Internal\MapField $input_map
     *          &#64;&#64;  .. cpp:var:: map<string,string> input_map
     *          &#64;&#64;
     *          &#64;&#64;     Map from name of an input tensor on this step's model to ensemble
     *          &#64;&#64;     tensor name. The ensemble tensor must have the same data type and
     *          &#64;&#64;     shape as the model input. Each model input must be assigned to
     *          &#64;&#64;     one ensemble tensor, but the same ensemble tensor can be assigned
     *          &#64;&#64;     to multiple model inputs.
     *          &#64;&#64;
     *     @type array|\Google\Protobuf\Internal\MapField $output_map
     *          &#64;&#64;  .. cpp:var:: map<string,string> output_map
     *          &#64;&#64;
     *          &#64;&#64;     Map from name of an output tensor on this step's model to ensemble
     *          &#64;&#64;     tensor name. The data type and shape of the ensemble tensor will
     *          &#64;&#64;     be inferred from the model output. It is optional to assign all
     *          &#64;&#64;     model outputs to ensemble tensors. One ensemble tensor name
     *          &#64;&#64;     can appear in an output map only once.
     *          &#64;&#64;
     *     @type string $model_namespace
     *          &#64;&#64;  .. cpp:var:: string model_namespace
     *          &#64;&#64;
     *          &#64;&#64;     [RESERVED] currently this field is reserved for internal use, users
     *          &#64;&#64;     must not set any value to this field to avoid unexpected behavior.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModelConfig::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;  .. cpp:var:: string model_name
     *&#64;&#64;
     *&#64;&#64;     The name of the model to execute for this step of the ensemble.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string model_name = 1;</code>
     * @return string
     */
    public function getModelName()
    {
        return $this->model_name;
    }

    /**
     *&#64;&#64;  .. cpp:var:: string model_name
     *&#64;&#64;
     *&#64;&#64;     The name of the model to execute for this step of the ensemble.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string model_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setModelName($var)
    {
        GPBUtil::checkString($var, True);
        $this->model_name = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: int64 model_version
     *&#64;&#64;
     *&#64;&#64;     The version of the model to use for inference. If -1
     *&#64;&#64;     the latest/most-recent version of the model is used.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 model_version = 2;</code>
     * @return int|string
     */
    public function getModelVersion()
    {
        return $this->model_version;
    }

    /**
     *&#64;&#64;  .. cpp:var:: int64 model_version
     *&#64;&#64;
     *&#64;&#64;     The version of the model to use for inference. If -1
     *&#64;&#64;     the latest/most-recent version of the model is used.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 model_version = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setModelVersion($var)
    {
        GPBUtil::checkInt64($var);
        $this->model_version = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: map<string,string> input_map
     *&#64;&#64;
     *&#64;&#64;     Map from name of an input tensor on this step's model to ensemble
     *&#64;&#64;     tensor name. The ensemble tensor must have the same data type and
     *&#64;&#64;     shape as the model input. Each model input must be assigned to
     *&#64;&#64;     one ensemble tensor, but the same ensemble tensor can be assigned
     *&#64;&#64;     to multiple model inputs.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>map<string, string> input_map = 3;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getInputMap()
    {
        return $this->input_map;
    }

    /**
     *&#64;&#64;  .. cpp:var:: map<string,string> input_map
     *&#64;&#64;
     *&#64;&#64;     Map from name of an input tensor on this step's model to ensemble
     *&#64;&#64;     tensor name. The ensemble tensor must have the same data type and
     *&#64;&#64;     shape as the model input. Each model input must be assigned to
     *&#64;&#64;     one ensemble tensor, but the same ensemble tensor can be assigned
     *&#64;&#64;     to multiple model inputs.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>map<string, string> input_map = 3;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setInputMap($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->input_map = $arr;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: map<string,string> output_map
     *&#64;&#64;
     *&#64;&#64;     Map from name of an output tensor on this step's model to ensemble
     *&#64;&#64;     tensor name. The data type and shape of the ensemble tensor will
     *&#64;&#64;     be inferred from the model output. It is optional to assign all
     *&#64;&#64;     model outputs to ensemble tensors. One ensemble tensor name
     *&#64;&#64;     can appear in an output map only once.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>map<string, string> output_map = 4;</code>
     * @return \Google\Protobuf\Internal\MapField
     */
    public function getOutputMap()
    {
        return $this->output_map;
    }

    /**
     *&#64;&#64;  .. cpp:var:: map<string,string> output_map
     *&#64;&#64;
     *&#64;&#64;     Map from name of an output tensor on this step's model to ensemble
     *&#64;&#64;     tensor name. The data type and shape of the ensemble tensor will
     *&#64;&#64;     be inferred from the model output. It is optional to assign all
     *&#64;&#64;     model outputs to ensemble tensors. One ensemble tensor name
     *&#64;&#64;     can appear in an output map only once.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>map<string, string> output_map = 4;</code>
     * @param array|\Google\Protobuf\Internal\MapField $var
     * @return $this
     */
    public function setOutputMap($var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::STRING);
        $this->output_map = $arr;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: string model_namespace
     *&#64;&#64;
     *&#64;&#64;     [RESERVED] currently this field is reserved for internal use, users
     *&#64;&#64;     must not set any value to this field to avoid unexpected behavior.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string model_namespace = 5;</code>
     * @return string
     */
    public function getModelNamespace()
    {
        return $this->model_namespace;
    }

    /**
     *&#64;&#64;  .. cpp:var:: string model_namespace
     *&#64;&#64;
     *&#64;&#64;     [RESERVED] currently this field is reserved for internal use, users
     *&#64;&#64;     must not set any value to this field to avoid unexpected behavior.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string model_namespace = 5;</code>
     * @param string $var
     * @return $this
     */
    public function setModelNamespace($var)
    {
        GPBUtil::checkString($var, True);
        $this->model_namespace = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Step::class, \Inference\ModelEnsembling_Step::class);

