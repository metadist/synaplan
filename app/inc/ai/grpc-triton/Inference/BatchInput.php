<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model_config.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;  .. cpp:var:: message BatchInput
 *&#64;&#64;
 *&#64;&#64;     A batch input is an additional input that must be added by
 *&#64;&#64;     the backend based on all the requests in a batch.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.BatchInput</code>
 */
class BatchInput extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;    .. cpp:var:: Kind kind
     *&#64;&#64;
     *&#64;&#64;       The kind of this batch input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.BatchInput.Kind kind = 1;</code>
     */
    protected $kind = 0;
    /**
     *&#64;&#64;    .. cpp:var:: string target_name (repeated)
     *&#64;&#64;
     *&#64;&#64;       The name of the model inputs that the backend will create
     *&#64;&#64;       for this batch input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated string target_name = 2;</code>
     */
    private $target_name;
    /**
     *&#64;&#64;    .. cpp:var:: DataType data_type
     *&#64;&#64;
     *&#64;&#64;       The input's datatype. The data type can be TYPE_INT32 or
     *&#64;&#64;       TYPE_FP32.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.DataType data_type = 3;</code>
     */
    protected $data_type = 0;
    /**
     *&#64;&#64;    .. cpp:var:: string source_input (repeated)
     *&#64;&#64;
     *&#64;&#64;       The backend derives the value for each batch input from one or
     *&#64;&#64;       more other inputs. 'source_input' gives the names of those
     *&#64;&#64;       inputs.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated string source_input = 4;</code>
     */
    private $source_input;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $kind
     *          &#64;&#64;    .. cpp:var:: Kind kind
     *          &#64;&#64;
     *          &#64;&#64;       The kind of this batch input.
     *          &#64;&#64;
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $target_name
     *          &#64;&#64;    .. cpp:var:: string target_name (repeated)
     *          &#64;&#64;
     *          &#64;&#64;       The name of the model inputs that the backend will create
     *          &#64;&#64;       for this batch input.
     *          &#64;&#64;
     *     @type int $data_type
     *          &#64;&#64;    .. cpp:var:: DataType data_type
     *          &#64;&#64;
     *          &#64;&#64;       The input's datatype. The data type can be TYPE_INT32 or
     *          &#64;&#64;       TYPE_FP32.
     *          &#64;&#64;
     *     @type string[]|\Google\Protobuf\Internal\RepeatedField $source_input
     *          &#64;&#64;    .. cpp:var:: string source_input (repeated)
     *          &#64;&#64;
     *          &#64;&#64;       The backend derives the value for each batch input from one or
     *          &#64;&#64;       more other inputs. 'source_input' gives the names of those
     *          &#64;&#64;       inputs.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModelConfig::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;    .. cpp:var:: Kind kind
     *&#64;&#64;
     *&#64;&#64;       The kind of this batch input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.BatchInput.Kind kind = 1;</code>
     * @return int
     */
    public function getKind()
    {
        return $this->kind;
    }

    /**
     *&#64;&#64;    .. cpp:var:: Kind kind
     *&#64;&#64;
     *&#64;&#64;       The kind of this batch input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.BatchInput.Kind kind = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setKind($var)
    {
        GPBUtil::checkEnum($var, \Inference\BatchInput_Kind::class);
        $this->kind = $var;

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: string target_name (repeated)
     *&#64;&#64;
     *&#64;&#64;       The name of the model inputs that the backend will create
     *&#64;&#64;       for this batch input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated string target_name = 2;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getTargetName()
    {
        return $this->target_name;
    }

    /**
     *&#64;&#64;    .. cpp:var:: string target_name (repeated)
     *&#64;&#64;
     *&#64;&#64;       The name of the model inputs that the backend will create
     *&#64;&#64;       for this batch input.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated string target_name = 2;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setTargetName($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->target_name = $arr;

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: DataType data_type
     *&#64;&#64;
     *&#64;&#64;       The input's datatype. The data type can be TYPE_INT32 or
     *&#64;&#64;       TYPE_FP32.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.DataType data_type = 3;</code>
     * @return int
     */
    public function getDataType()
    {
        return $this->data_type;
    }

    /**
     *&#64;&#64;    .. cpp:var:: DataType data_type
     *&#64;&#64;
     *&#64;&#64;       The input's datatype. The data type can be TYPE_INT32 or
     *&#64;&#64;       TYPE_FP32.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.DataType data_type = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setDataType($var)
    {
        GPBUtil::checkEnum($var, \Inference\DataType::class);
        $this->data_type = $var;

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: string source_input (repeated)
     *&#64;&#64;
     *&#64;&#64;       The backend derives the value for each batch input from one or
     *&#64;&#64;       more other inputs. 'source_input' gives the names of those
     *&#64;&#64;       inputs.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated string source_input = 4;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getSourceInput()
    {
        return $this->source_input;
    }

    /**
     *&#64;&#64;    .. cpp:var:: string source_input (repeated)
     *&#64;&#64;
     *&#64;&#64;       The backend derives the value for each batch input from one or
     *&#64;&#64;       more other inputs. 'source_input' gives the names of those
     *&#64;&#64;       inputs.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated string source_input = 4;</code>
     * @param string[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setSourceInput($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->source_input = $arr;

        return $this;
    }

}

