<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model_config.proto

namespace Inference\ModelOptimizationPolicy;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;  .. cpp:var:: message PinnedMemoryBuffer
 *&#64;&#64;
 *&#64;&#64;     Specify whether to use a pinned memory buffer when transferring data
 *&#64;&#64;     between non-pinned system memory and GPU memory. Using a pinned
 *&#64;&#64;     memory buffer for system from/to GPU transfers will typically provide
 *&#64;&#64;     increased performance. For example, in the common use case where the
 *&#64;&#64;     request provides inputs and delivers outputs via non-pinned system
 *&#64;&#64;     memory, if the model instance accepts GPU IOs, the inputs will be
 *&#64;&#64;     processed by two copies: from non-pinned system memory to pinned
 *&#64;&#64;     memory, and from pinned memory to GPU memory. Similarly, pinned
 *&#64;&#64;     memory will be used for delivering the outputs.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.ModelOptimizationPolicy.PinnedMemoryBuffer</code>
 */
class PinnedMemoryBuffer extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;    .. cpp:var:: bool enable
     *&#64;&#64;
     *&#64;&#64;       Use pinned memory buffer. Default is true.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool enable = 1;</code>
     */
    protected $enable = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enable
     *          &#64;&#64;    .. cpp:var:: bool enable
     *          &#64;&#64;
     *          &#64;&#64;       Use pinned memory buffer. Default is true.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModelConfig::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;    .. cpp:var:: bool enable
     *&#64;&#64;
     *&#64;&#64;       Use pinned memory buffer. Default is true.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool enable = 1;</code>
     * @return bool
     */
    public function getEnable()
    {
        return $this->enable;
    }

    /**
     *&#64;&#64;    .. cpp:var:: bool enable
     *&#64;&#64;
     *&#64;&#64;       Use pinned memory buffer. Default is true.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool enable = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnable($var)
    {
        GPBUtil::checkBool($var);
        $this->enable = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PinnedMemoryBuffer::class, \Inference\ModelOptimizationPolicy_PinnedMemoryBuffer::class);

