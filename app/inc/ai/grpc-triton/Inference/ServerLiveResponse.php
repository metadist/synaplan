<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc_service.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;.. cpp:var:: message ServerLiveResponse
 *&#64;&#64;
 *&#64;&#64;   Response message for ServerLive.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.ServerLiveResponse</code>
 */
class ServerLiveResponse extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;
     *&#64;&#64;  .. cpp:var:: bool live
     *&#64;&#64;
     *&#64;&#64;     True if the inference server is live, false it not live.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool live = 1;</code>
     */
    protected $live = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $live
     *          &#64;&#64;
     *          &#64;&#64;  .. cpp:var:: bool live
     *          &#64;&#64;
     *          &#64;&#64;     True if the inference server is live, false it not live.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GrpcService::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;
     *&#64;&#64;  .. cpp:var:: bool live
     *&#64;&#64;
     *&#64;&#64;     True if the inference server is live, false it not live.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool live = 1;</code>
     * @return bool
     */
    public function getLive()
    {
        return $this->live;
    }

    /**
     *&#64;&#64;
     *&#64;&#64;  .. cpp:var:: bool live
     *&#64;&#64;
     *&#64;&#64;     True if the inference server is live, false it not live.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool live = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setLive($var)
    {
        GPBUtil::checkBool($var);
        $this->live = $var;

        return $this;
    }

}

