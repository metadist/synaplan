<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model_config.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;.. cpp:var:: message ModelVersionPolicy
 *&#64;&#64;
 *&#64;&#64;   Policy indicating which versions of a model should be made
 *&#64;&#64;   available by the inference server.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.ModelVersionPolicy</code>
 */
class ModelVersionPolicy extends \Google\Protobuf\Internal\Message
{
    protected $policy_choice;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Inference\ModelVersionPolicy\Latest $latest
     *          &#64;&#64;    .. cpp:var:: Latest latest
     *          &#64;&#64;
     *          &#64;&#64;       Serve only latest version(s) of the model.
     *          &#64;&#64;
     *     @type \Inference\ModelVersionPolicy\All $all
     *          &#64;&#64;    .. cpp:var:: All all
     *          &#64;&#64;
     *          &#64;&#64;       Serve all versions of the model.
     *          &#64;&#64;
     *     @type \Inference\ModelVersionPolicy\Specific $specific
     *          &#64;&#64;    .. cpp:var:: Specific specific
     *          &#64;&#64;
     *          &#64;&#64;       Serve only specific version(s) of the model.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModelConfig::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;    .. cpp:var:: Latest latest
     *&#64;&#64;
     *&#64;&#64;       Serve only latest version(s) of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.ModelVersionPolicy.Latest latest = 1;</code>
     * @return \Inference\ModelVersionPolicy\Latest
     */
    public function getLatest()
    {
        return $this->readOneof(1);
    }

    /**
     *&#64;&#64;    .. cpp:var:: Latest latest
     *&#64;&#64;
     *&#64;&#64;       Serve only latest version(s) of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.ModelVersionPolicy.Latest latest = 1;</code>
     * @param \Inference\ModelVersionPolicy\Latest $var
     * @return $this
     */
    public function setLatest($var)
    {
        GPBUtil::checkMessage($var, \Inference\ModelVersionPolicy_Latest::class);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: All all
     *&#64;&#64;
     *&#64;&#64;       Serve all versions of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.ModelVersionPolicy.All all = 2;</code>
     * @return \Inference\ModelVersionPolicy\All
     */
    public function getAll()
    {
        return $this->readOneof(2);
    }

    /**
     *&#64;&#64;    .. cpp:var:: All all
     *&#64;&#64;
     *&#64;&#64;       Serve all versions of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.ModelVersionPolicy.All all = 2;</code>
     * @param \Inference\ModelVersionPolicy\All $var
     * @return $this
     */
    public function setAll($var)
    {
        GPBUtil::checkMessage($var, \Inference\ModelVersionPolicy_All::class);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: Specific specific
     *&#64;&#64;
     *&#64;&#64;       Serve only specific version(s) of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.ModelVersionPolicy.Specific specific = 3;</code>
     * @return \Inference\ModelVersionPolicy\Specific
     */
    public function getSpecific()
    {
        return $this->readOneof(3);
    }

    /**
     *&#64;&#64;    .. cpp:var:: Specific specific
     *&#64;&#64;
     *&#64;&#64;       Serve only specific version(s) of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.ModelVersionPolicy.Specific specific = 3;</code>
     * @param \Inference\ModelVersionPolicy\Specific $var
     * @return $this
     */
    public function setSpecific($var)
    {
        GPBUtil::checkMessage($var, \Inference\ModelVersionPolicy_Specific::class);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getPolicyChoice()
    {
        return $this->whichOneof("policy_choice");
    }

}

