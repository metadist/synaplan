<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc_service.proto

namespace Inference\RepositoryIndexResponse;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;  .. cpp:var:: message ModelIndex
 *&#64;&#64;
 *&#64;&#64;     Index entry for a model.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.RepositoryIndexResponse.ModelIndex</code>
 */
class ModelIndex extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;
     *&#64;&#64;    .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;       The name of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     *&#64;&#64;    .. cpp:var:: string version
     *&#64;&#64;
     *&#64;&#64;       The version of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string version = 2;</code>
     */
    protected $version = '';
    /**
     *&#64;&#64;
     *&#64;&#64;    .. cpp:var:: string state
     *&#64;&#64;
     *&#64;&#64;       The state of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string state = 3;</code>
     */
    protected $state = '';
    /**
     *&#64;&#64;
     *&#64;&#64;    .. cpp:var:: string reason
     *&#64;&#64;
     *&#64;&#64;       The reason, if any, that the model is in the given state.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string reason = 4;</code>
     */
    protected $reason = '';

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *          &#64;&#64;
     *          &#64;&#64;    .. cpp:var:: string name
     *          &#64;&#64;
     *          &#64;&#64;       The name of the model.
     *          &#64;&#64;
     *     @type string $version
     *          &#64;&#64;    .. cpp:var:: string version
     *          &#64;&#64;
     *          &#64;&#64;       The version of the model.
     *          &#64;&#64;
     *     @type string $state
     *          &#64;&#64;
     *          &#64;&#64;    .. cpp:var:: string state
     *          &#64;&#64;
     *          &#64;&#64;       The state of the model.
     *          &#64;&#64;
     *     @type string $reason
     *          &#64;&#64;
     *          &#64;&#64;    .. cpp:var:: string reason
     *          &#64;&#64;
     *          &#64;&#64;       The reason, if any, that the model is in the given state.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GrpcService::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;
     *&#64;&#64;    .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;       The name of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     *&#64;&#64;
     *&#64;&#64;    .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;       The name of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: string version
     *&#64;&#64;
     *&#64;&#64;       The version of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string version = 2;</code>
     * @return string
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     *&#64;&#64;    .. cpp:var:: string version
     *&#64;&#64;
     *&#64;&#64;       The version of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string version = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->version = $var;

        return $this;
    }

    /**
     *&#64;&#64;
     *&#64;&#64;    .. cpp:var:: string state
     *&#64;&#64;
     *&#64;&#64;       The state of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string state = 3;</code>
     * @return string
     */
    public function getState()
    {
        return $this->state;
    }

    /**
     *&#64;&#64;
     *&#64;&#64;    .. cpp:var:: string state
     *&#64;&#64;
     *&#64;&#64;       The state of the model.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string state = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setState($var)
    {
        GPBUtil::checkString($var, True);
        $this->state = $var;

        return $this;
    }

    /**
     *&#64;&#64;
     *&#64;&#64;    .. cpp:var:: string reason
     *&#64;&#64;
     *&#64;&#64;       The reason, if any, that the model is in the given state.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string reason = 4;</code>
     * @return string
     */
    public function getReason()
    {
        return $this->reason;
    }

    /**
     *&#64;&#64;
     *&#64;&#64;    .. cpp:var:: string reason
     *&#64;&#64;
     *&#64;&#64;       The reason, if any, that the model is in the given state.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string reason = 4;</code>
     * @param string $var
     * @return $this
     */
    public function setReason($var)
    {
        GPBUtil::checkString($var, True);
        $this->reason = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ModelIndex::class, \Inference\RepositoryIndexResponse_ModelIndex::class);

