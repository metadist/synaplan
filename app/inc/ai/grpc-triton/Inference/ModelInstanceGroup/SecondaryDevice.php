<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model_config.proto

namespace Inference\ModelInstanceGroup;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;  .. cpp:var:: message SecondaryDevice
 *&#64;&#64;
 *&#64;&#64;     A secondary device required for a model instance.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.ModelInstanceGroup.SecondaryDevice</code>
 */
class SecondaryDevice extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;  .. cpp:var:: SecondaryDeviceKind kind
     *&#64;&#64;
     *&#64;&#64;     The secondary device kind.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.ModelInstanceGroup.SecondaryDevice.SecondaryDeviceKind kind = 1;</code>
     */
    protected $kind = 0;
    /**
     *&#64;&#64;  .. cpp:var:: int64 device_id
     *&#64;&#64;
     *&#64;&#64;     Identifier for the secondary device.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 device_id = 2;</code>
     */
    protected $device_id = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $kind
     *          &#64;&#64;  .. cpp:var:: SecondaryDeviceKind kind
     *          &#64;&#64;
     *          &#64;&#64;     The secondary device kind.
     *          &#64;&#64;
     *     @type int|string $device_id
     *          &#64;&#64;  .. cpp:var:: int64 device_id
     *          &#64;&#64;
     *          &#64;&#64;     Identifier for the secondary device.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModelConfig::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;  .. cpp:var:: SecondaryDeviceKind kind
     *&#64;&#64;
     *&#64;&#64;     The secondary device kind.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.ModelInstanceGroup.SecondaryDevice.SecondaryDeviceKind kind = 1;</code>
     * @return int
     */
    public function getKind()
    {
        return $this->kind;
    }

    /**
     *&#64;&#64;  .. cpp:var:: SecondaryDeviceKind kind
     *&#64;&#64;
     *&#64;&#64;     The secondary device kind.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>.inference.ModelInstanceGroup.SecondaryDevice.SecondaryDeviceKind kind = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setKind($var)
    {
        GPBUtil::checkEnum($var, \Inference\ModelInstanceGroup_SecondaryDevice_SecondaryDeviceKind::class);
        $this->kind = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: int64 device_id
     *&#64;&#64;
     *&#64;&#64;     Identifier for the secondary device.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 device_id = 2;</code>
     * @return int|string
     */
    public function getDeviceId()
    {
        return $this->device_id;
    }

    /**
     *&#64;&#64;  .. cpp:var:: int64 device_id
     *&#64;&#64;
     *&#64;&#64;     Identifier for the secondary device.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 device_id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDeviceId($var)
    {
        GPBUtil::checkInt64($var);
        $this->device_id = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(SecondaryDevice::class, \Inference\ModelInstanceGroup_SecondaryDevice::class);

