<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model_config.proto

namespace Inference\ModelInput;

use UnexpectedValueException;

/**
 *&#64;&#64;
 *&#64;&#64;  .. cpp:enum:: Format
 *&#64;&#64;
 *&#64;&#64;     The format for the input.
 *&#64;&#64;
 *
 * Protobuf type <code>inference.ModelInput.Format</code>
 */
class Format
{
    /**
     *&#64;&#64;    .. cpp:enumerator:: Format::FORMAT_NONE = 0
     *&#64;&#64;
     *&#64;&#64;       The input has no specific format. This is the default.
     *&#64;&#64;
     *
     * Generated from protobuf enum <code>FORMAT_NONE = 0;</code>
     */
    const FORMAT_NONE = 0;
    /**
     *&#64;&#64;    .. cpp:enumerator:: Format::FORMAT_NHWC = 1
     *&#64;&#64;
     *&#64;&#64;       HWC image format. Tensors with this format require 3 dimensions
     *&#64;&#64;       if the model does not support batching (max_batch_size = 0) or 4
     *&#64;&#64;       dimensions if the model does support batching (max_batch_size
     *&#64;&#64;       >= 1). In either case the 'dims' below should only specify the
     *&#64;&#64;       3 non-batch dimensions (i.e. HWC or CHW).
     *&#64;&#64;
     *
     * Generated from protobuf enum <code>FORMAT_NHWC = 1;</code>
     */
    const FORMAT_NHWC = 1;
    /**
     *&#64;&#64;    .. cpp:enumerator:: Format::FORMAT_NCHW = 2
     *&#64;&#64;
     *&#64;&#64;       CHW image format. Tensors with this format require 3 dimensions
     *&#64;&#64;       if the model does not support batching (max_batch_size = 0) or 4
     *&#64;&#64;       dimensions if the model does support batching (max_batch_size
     *&#64;&#64;       >= 1). In either case the 'dims' below should only specify the
     *&#64;&#64;       3 non-batch dimensions (i.e. HWC or CHW).
     *&#64;&#64;
     *
     * Generated from protobuf enum <code>FORMAT_NCHW = 2;</code>
     */
    const FORMAT_NCHW = 2;

    private static $valueToName = [
        self::FORMAT_NONE => 'FORMAT_NONE',
        self::FORMAT_NHWC => 'FORMAT_NHWC',
        self::FORMAT_NCHW => 'FORMAT_NCHW',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Format::class, \Inference\ModelInput_Format::class);

