<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc_service.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;.. cpp:var:: message InferParameter
 *&#64;&#64;
 *&#64;&#64;   An inference parameter value.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.InferParameter</code>
 */
class InferParameter extends \Google\Protobuf\Internal\Message
{
    protected $parameter_choice;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $bool_param
     *          &#64;&#64;    .. cpp:var:: bool bool_param
     *          &#64;&#64;
     *          &#64;&#64;       A boolean parameter value.
     *          &#64;&#64;
     *     @type int|string $int64_param
     *          &#64;&#64;    .. cpp:var:: int64 int64_param
     *          &#64;&#64;
     *          &#64;&#64;       An int64 parameter value.
     *          &#64;&#64;
     *     @type string $string_param
     *          &#64;&#64;    .. cpp:var:: string string_param
     *          &#64;&#64;
     *          &#64;&#64;       A string parameter value.
     *          &#64;&#64;
     *     @type float $double_param
     *          &#64;&#64;    .. cpp:var:: double double_param
     *          &#64;&#64;
     *          &#64;&#64;       A double parameter value.
     *          &#64;&#64;
     *     @type int|string $uint64_param
     *          &#64;&#64;    .. cpp:var:: uint64 uint64_param
     *          &#64;&#64;
     *          &#64;&#64;       A uint64 parameter value.
     *          &#64;&#64;
     *          &#64;&#64;       Not supported for custom parameters
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GrpcService::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;    .. cpp:var:: bool bool_param
     *&#64;&#64;
     *&#64;&#64;       A boolean parameter value.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool bool_param = 1;</code>
     * @return bool
     */
    public function getBoolParam()
    {
        return $this->readOneof(1);
    }

    /**
     *&#64;&#64;    .. cpp:var:: bool bool_param
     *&#64;&#64;
     *&#64;&#64;       A boolean parameter value.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool bool_param = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setBoolParam($var)
    {
        GPBUtil::checkBool($var);
        $this->writeOneof(1, $var);

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: int64 int64_param
     *&#64;&#64;
     *&#64;&#64;       An int64 parameter value.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 int64_param = 2;</code>
     * @return int|string
     */
    public function getInt64Param()
    {
        return $this->readOneof(2);
    }

    /**
     *&#64;&#64;    .. cpp:var:: int64 int64_param
     *&#64;&#64;
     *&#64;&#64;       An int64 parameter value.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 int64_param = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setInt64Param($var)
    {
        GPBUtil::checkInt64($var);
        $this->writeOneof(2, $var);

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: string string_param
     *&#64;&#64;
     *&#64;&#64;       A string parameter value.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string string_param = 3;</code>
     * @return string
     */
    public function getStringParam()
    {
        return $this->readOneof(3);
    }

    /**
     *&#64;&#64;    .. cpp:var:: string string_param
     *&#64;&#64;
     *&#64;&#64;       A string parameter value.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string string_param = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setStringParam($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(3, $var);

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: double double_param
     *&#64;&#64;
     *&#64;&#64;       A double parameter value.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>double double_param = 4;</code>
     * @return float
     */
    public function getDoubleParam()
    {
        return $this->readOneof(4);
    }

    /**
     *&#64;&#64;    .. cpp:var:: double double_param
     *&#64;&#64;
     *&#64;&#64;       A double parameter value.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>double double_param = 4;</code>
     * @param float $var
     * @return $this
     */
    public function setDoubleParam($var)
    {
        GPBUtil::checkDouble($var);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     *&#64;&#64;    .. cpp:var:: uint64 uint64_param
     *&#64;&#64;
     *&#64;&#64;       A uint64 parameter value.
     *&#64;&#64;
     *&#64;&#64;       Not supported for custom parameters
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 uint64_param = 5;</code>
     * @return int|string
     */
    public function getUint64Param()
    {
        return $this->readOneof(5);
    }

    /**
     *&#64;&#64;    .. cpp:var:: uint64 uint64_param
     *&#64;&#64;
     *&#64;&#64;       A uint64 parameter value.
     *&#64;&#64;
     *&#64;&#64;       Not supported for custom parameters
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 uint64_param = 5;</code>
     * @param int|string $var
     * @return $this
     */
    public function setUint64Param($var)
    {
        GPBUtil::checkUint64($var);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getParameterChoice()
    {
        return $this->whichOneof("parameter_choice");
    }

}

