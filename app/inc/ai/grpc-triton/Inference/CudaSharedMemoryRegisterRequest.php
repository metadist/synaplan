<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc_service.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;.. cpp:var:: message CudaSharedMemoryRegisterRequest
 *&#64;&#64;
 *&#64;&#64;   Request message for CudaSharedMemoryRegister.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.CudaSharedMemoryRegisterRequest</code>
 */
class CudaSharedMemoryRegisterRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;
     *&#64;&#64;  .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;     The name of the region to register.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     *&#64;&#64;  .. cpp:var:: bytes raw_handle
     *&#64;&#64;
     *&#64;&#64;     The raw serialized cudaIPC handle.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bytes raw_handle = 2;</code>
     */
    protected $raw_handle = '';
    /**
     *&#64;&#64;  .. cpp:var:: int64 device_id
     *&#64;&#64;
     *&#64;&#64;     The GPU device ID on which the cudaIPC handle was created.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 device_id = 3;</code>
     */
    protected $device_id = 0;
    /**
     *&#64;&#64;  .. cpp:var:: uint64 byte_size
     *&#64;&#64;
     *&#64;&#64;     Size of the shared memory block, in bytes.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 byte_size = 4;</code>
     */
    protected $byte_size = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *          &#64;&#64;
     *          &#64;&#64;  .. cpp:var:: string name
     *          &#64;&#64;
     *          &#64;&#64;     The name of the region to register.
     *          &#64;&#64;
     *     @type string $raw_handle
     *          &#64;&#64;  .. cpp:var:: bytes raw_handle
     *          &#64;&#64;
     *          &#64;&#64;     The raw serialized cudaIPC handle.
     *          &#64;&#64;
     *     @type int|string $device_id
     *          &#64;&#64;  .. cpp:var:: int64 device_id
     *          &#64;&#64;
     *          &#64;&#64;     The GPU device ID on which the cudaIPC handle was created.
     *          &#64;&#64;
     *     @type int|string $byte_size
     *          &#64;&#64;  .. cpp:var:: uint64 byte_size
     *          &#64;&#64;
     *          &#64;&#64;     Size of the shared memory block, in bytes.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GrpcService::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;
     *&#64;&#64;  .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;     The name of the region to register.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     *&#64;&#64;
     *&#64;&#64;  .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;     The name of the region to register.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: bytes raw_handle
     *&#64;&#64;
     *&#64;&#64;     The raw serialized cudaIPC handle.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bytes raw_handle = 2;</code>
     * @return string
     */
    public function getRawHandle()
    {
        return $this->raw_handle;
    }

    /**
     *&#64;&#64;  .. cpp:var:: bytes raw_handle
     *&#64;&#64;
     *&#64;&#64;     The raw serialized cudaIPC handle.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bytes raw_handle = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setRawHandle($var)
    {
        GPBUtil::checkString($var, False);
        $this->raw_handle = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: int64 device_id
     *&#64;&#64;
     *&#64;&#64;     The GPU device ID on which the cudaIPC handle was created.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 device_id = 3;</code>
     * @return int|string
     */
    public function getDeviceId()
    {
        return $this->device_id;
    }

    /**
     *&#64;&#64;  .. cpp:var:: int64 device_id
     *&#64;&#64;
     *&#64;&#64;     The GPU device ID on which the cudaIPC handle was created.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 device_id = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setDeviceId($var)
    {
        GPBUtil::checkInt64($var);
        $this->device_id = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint64 byte_size
     *&#64;&#64;
     *&#64;&#64;     Size of the shared memory block, in bytes.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 byte_size = 4;</code>
     * @return int|string
     */
    public function getByteSize()
    {
        return $this->byte_size;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint64 byte_size
     *&#64;&#64;
     *&#64;&#64;     Size of the shared memory block, in bytes.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 byte_size = 4;</code>
     * @param int|string $var
     * @return $this
     */
    public function setByteSize($var)
    {
        GPBUtil::checkUint64($var);
        $this->byte_size = $var;

        return $this;
    }

}

