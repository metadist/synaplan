<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model_config.proto

namespace Inference\ModelRateLimiter;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;  .. cpp:var:: message Resource
 *&#64;&#64;
 *&#64;&#64;     The resource property.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.ModelRateLimiter.Resource</code>
 */
class Resource extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;  .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;     The name associated with the resource.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     */
    protected $name = '';
    /**
     *&#64;&#64;  .. cpp:var:: bool global
     *&#64;&#64;
     *&#64;&#64;     Whether or not the resource is global. If true then the resource
     *&#64;&#64;     is assumed to be shared among the devices otherwise specified
     *&#64;&#64;     count of the resource is assumed for each device associated
     *&#64;&#64;     with the instance.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool global = 2;</code>
     */
    protected $global = false;
    /**
     *&#64;&#64;  .. cpp:var:: uint32 count
     *&#64;&#64;
     *&#64;&#64;     The number of resources required for the execution of the model
     *&#64;&#64;     instance.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint32 count = 3;</code>
     */
    protected $count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $name
     *          &#64;&#64;  .. cpp:var:: string name
     *          &#64;&#64;
     *          &#64;&#64;     The name associated with the resource.
     *          &#64;&#64;
     *     @type bool $global
     *          &#64;&#64;  .. cpp:var:: bool global
     *          &#64;&#64;
     *          &#64;&#64;     Whether or not the resource is global. If true then the resource
     *          &#64;&#64;     is assumed to be shared among the devices otherwise specified
     *          &#64;&#64;     count of the resource is assumed for each device associated
     *          &#64;&#64;     with the instance.
     *          &#64;&#64;
     *     @type int $count
     *          &#64;&#64;  .. cpp:var:: uint32 count
     *          &#64;&#64;
     *          &#64;&#64;     The number of resources required for the execution of the model
     *          &#64;&#64;     instance.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModelConfig::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;  .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;     The name associated with the resource.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     *&#64;&#64;  .. cpp:var:: string name
     *&#64;&#64;
     *&#64;&#64;     The name associated with the resource.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: bool global
     *&#64;&#64;
     *&#64;&#64;     Whether or not the resource is global. If true then the resource
     *&#64;&#64;     is assumed to be shared among the devices otherwise specified
     *&#64;&#64;     count of the resource is assumed for each device associated
     *&#64;&#64;     with the instance.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool global = 2;</code>
     * @return bool
     */
    public function getGlobal()
    {
        return $this->global;
    }

    /**
     *&#64;&#64;  .. cpp:var:: bool global
     *&#64;&#64;
     *&#64;&#64;     Whether or not the resource is global. If true then the resource
     *&#64;&#64;     is assumed to be shared among the devices otherwise specified
     *&#64;&#64;     count of the resource is assumed for each device associated
     *&#64;&#64;     with the instance.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool global = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setGlobal($var)
    {
        GPBUtil::checkBool($var);
        $this->global = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint32 count
     *&#64;&#64;
     *&#64;&#64;     The number of resources required for the execution of the model
     *&#64;&#64;     instance.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint32 count = 3;</code>
     * @return int
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint32 count
     *&#64;&#64;
     *&#64;&#64;     The number of resources required for the execution of the model
     *&#64;&#64;     instance.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint32 count = 3;</code>
     * @param int $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkUint32($var);
        $this->count = $var;

        return $this;
    }

}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Resource::class, \Inference\ModelRateLimiter_Resource::class);

