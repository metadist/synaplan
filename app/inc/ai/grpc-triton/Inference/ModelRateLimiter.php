<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model_config.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;  .. cpp:var:: message ModelRateLimiter
 *&#64;&#64;
 *&#64;&#64;     The specifications required by the rate limiter to properly
 *&#64;&#64;     schedule the inference requests across the different models
 *&#64;&#64;     and their instances.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.ModelRateLimiter</code>
 */
class ModelRateLimiter extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;  .. cpp:var:: Resource resources (repeated)
     *&#64;&#64;
     *&#64;&#64;     The resources required to execute the request on a model instance.
     *&#64;&#64;     Resources are just names with a corresponding count. The execution
     *&#64;&#64;     of the instance will be blocked until the specified resources are
     *&#64;&#64;     available. By default an instance uses no rate-limiter resources.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated .inference.ModelRateLimiter.Resource resources = 1;</code>
     */
    private $resources;
    /**
     *&#64;&#64;  .. cpp:var:: uint32 priority
     *&#64;&#64;
     *&#64;&#64;     The optional weighting value to be used for prioritizing across
     *&#64;&#64;     instances. An instance with priority 2 will be given 1/2 the
     *&#64;&#64;     number of scheduling chances as an instance_group with priority
     *&#64;&#64;     1. The default priority is 1. The priority of value 0 will be
     *&#64;&#64;     treated as priority 1.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint32 priority = 2;</code>
     */
    protected $priority = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Inference\ModelRateLimiter\Resource[]|\Google\Protobuf\Internal\RepeatedField $resources
     *          &#64;&#64;  .. cpp:var:: Resource resources (repeated)
     *          &#64;&#64;
     *          &#64;&#64;     The resources required to execute the request on a model instance.
     *          &#64;&#64;     Resources are just names with a corresponding count. The execution
     *          &#64;&#64;     of the instance will be blocked until the specified resources are
     *          &#64;&#64;     available. By default an instance uses no rate-limiter resources.
     *          &#64;&#64;
     *     @type int $priority
     *          &#64;&#64;  .. cpp:var:: uint32 priority
     *          &#64;&#64;
     *          &#64;&#64;     The optional weighting value to be used for prioritizing across
     *          &#64;&#64;     instances. An instance with priority 2 will be given 1/2 the
     *          &#64;&#64;     number of scheduling chances as an instance_group with priority
     *          &#64;&#64;     1. The default priority is 1. The priority of value 0 will be
     *          &#64;&#64;     treated as priority 1.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModelConfig::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;  .. cpp:var:: Resource resources (repeated)
     *&#64;&#64;
     *&#64;&#64;     The resources required to execute the request on a model instance.
     *&#64;&#64;     Resources are just names with a corresponding count. The execution
     *&#64;&#64;     of the instance will be blocked until the specified resources are
     *&#64;&#64;     available. By default an instance uses no rate-limiter resources.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated .inference.ModelRateLimiter.Resource resources = 1;</code>
     * @return \Google\Protobuf\Internal\RepeatedField
     */
    public function getResources()
    {
        return $this->resources;
    }

    /**
     *&#64;&#64;  .. cpp:var:: Resource resources (repeated)
     *&#64;&#64;
     *&#64;&#64;     The resources required to execute the request on a model instance.
     *&#64;&#64;     Resources are just names with a corresponding count. The execution
     *&#64;&#64;     of the instance will be blocked until the specified resources are
     *&#64;&#64;     available. By default an instance uses no rate-limiter resources.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>repeated .inference.ModelRateLimiter.Resource resources = 1;</code>
     * @param \Inference\ModelRateLimiter\Resource[]|\Google\Protobuf\Internal\RepeatedField $var
     * @return $this
     */
    public function setResources($var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Inference\ModelRateLimiter\Resource::class);
        $this->resources = $arr;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint32 priority
     *&#64;&#64;
     *&#64;&#64;     The optional weighting value to be used for prioritizing across
     *&#64;&#64;     instances. An instance with priority 2 will be given 1/2 the
     *&#64;&#64;     number of scheduling chances as an instance_group with priority
     *&#64;&#64;     1. The default priority is 1. The priority of value 0 will be
     *&#64;&#64;     treated as priority 1.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint32 priority = 2;</code>
     * @return int
     */
    public function getPriority()
    {
        return $this->priority;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint32 priority
     *&#64;&#64;
     *&#64;&#64;     The optional weighting value to be used for prioritizing across
     *&#64;&#64;     instances. An instance with priority 2 will be given 1/2 the
     *&#64;&#64;     number of scheduling chances as an instance_group with priority
     *&#64;&#64;     1. The default priority is 1. The priority of value 0 will be
     *&#64;&#64;     treated as priority 1.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint32 priority = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setPriority($var)
    {
        GPBUtil::checkUint32($var);
        $this->priority = $var;

        return $this;
    }

}

