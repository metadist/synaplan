<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc_service.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;.. cpp:var:: message MemoryUsage
 *&#64;&#64;
 *&#64;&#64;   Memory usage.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.MemoryUsage</code>
 */
class MemoryUsage extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;  .. cpp:var:: string type
     *&#64;&#64;
     *&#64;&#64;     The type of memory, the value can be "CPU", "CPU_PINNED", "GPU".
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string type = 1;</code>
     */
    protected $type = '';
    /**
     *&#64;&#64;  .. cpp:var:: int64 id
     *&#64;&#64;
     *&#64;&#64;     The id of the memory, typically used with "type" to identify
     *&#64;&#64;     a device that hosts the memory.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 id = 2;</code>
     */
    protected $id = 0;
    /**
     *&#64;&#64;  .. cpp:var:: uint64 byte_size
     *&#64;&#64;
     *&#64;&#64;     The byte size of the memory.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 byte_size = 3;</code>
     */
    protected $byte_size = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $type
     *          &#64;&#64;  .. cpp:var:: string type
     *          &#64;&#64;
     *          &#64;&#64;     The type of memory, the value can be "CPU", "CPU_PINNED", "GPU".
     *          &#64;&#64;
     *     @type int|string $id
     *          &#64;&#64;  .. cpp:var:: int64 id
     *          &#64;&#64;
     *          &#64;&#64;     The id of the memory, typically used with "type" to identify
     *          &#64;&#64;     a device that hosts the memory.
     *          &#64;&#64;
     *     @type int|string $byte_size
     *          &#64;&#64;  .. cpp:var:: uint64 byte_size
     *          &#64;&#64;
     *          &#64;&#64;     The byte size of the memory.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GrpcService::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;  .. cpp:var:: string type
     *&#64;&#64;
     *&#64;&#64;     The type of memory, the value can be "CPU", "CPU_PINNED", "GPU".
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string type = 1;</code>
     * @return string
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     *&#64;&#64;  .. cpp:var:: string type
     *&#64;&#64;
     *&#64;&#64;     The type of memory, the value can be "CPU", "CPU_PINNED", "GPU".
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string type = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setType($var)
    {
        GPBUtil::checkString($var, True);
        $this->type = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: int64 id
     *&#64;&#64;
     *&#64;&#64;     The id of the memory, typically used with "type" to identify
     *&#64;&#64;     a device that hosts the memory.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 id = 2;</code>
     * @return int|string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     *&#64;&#64;  .. cpp:var:: int64 id
     *&#64;&#64;
     *&#64;&#64;     The id of the memory, typically used with "type" to identify
     *&#64;&#64;     a device that hosts the memory.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>int64 id = 2;</code>
     * @param int|string $var
     * @return $this
     */
    public function setId($var)
    {
        GPBUtil::checkInt64($var);
        $this->id = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint64 byte_size
     *&#64;&#64;
     *&#64;&#64;     The byte size of the memory.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 byte_size = 3;</code>
     * @return int|string
     */
    public function getByteSize()
    {
        return $this->byte_size;
    }

    /**
     *&#64;&#64;  .. cpp:var:: uint64 byte_size
     *&#64;&#64;
     *&#64;&#64;     The byte size of the memory.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>uint64 byte_size = 3;</code>
     * @param int|string $var
     * @return $this
     */
    public function setByteSize($var)
    {
        GPBUtil::checkUint64($var);
        $this->byte_size = $var;

        return $this;
    }

}

