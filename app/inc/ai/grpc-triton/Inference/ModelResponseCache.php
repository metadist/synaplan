<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: model_config.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;.. cpp:var:: message ModelResponseCache
 *&#64;&#64;
 *&#64;&#64;   The response cache setting for the model.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.ModelResponseCache</code>
 */
class ModelResponseCache extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;
     *&#64;&#64;  .. cpp::var:: bool enable
     *&#64;&#64;
     *&#64;&#64;     Whether or not to use response cache for the model. If True, the
     *&#64;&#64;     responses from the model are cached and when identical request
     *&#64;&#64;     is encountered, instead of going through the model execution,
     *&#64;&#64;     the response from the cache is utilized. By default, response
     *&#64;&#64;     cache is disabled for the models.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool enable = 1;</code>
     */
    protected $enable = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $enable
     *          &#64;&#64;
     *          &#64;&#64;  .. cpp::var:: bool enable
     *          &#64;&#64;
     *          &#64;&#64;     Whether or not to use response cache for the model. If True, the
     *          &#64;&#64;     responses from the model are cached and when identical request
     *          &#64;&#64;     is encountered, instead of going through the model execution,
     *          &#64;&#64;     the response from the cache is utilized. By default, response
     *          &#64;&#64;     cache is disabled for the models.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ModelConfig::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;
     *&#64;&#64;  .. cpp::var:: bool enable
     *&#64;&#64;
     *&#64;&#64;     Whether or not to use response cache for the model. If True, the
     *&#64;&#64;     responses from the model are cached and when identical request
     *&#64;&#64;     is encountered, instead of going through the model execution,
     *&#64;&#64;     the response from the cache is utilized. By default, response
     *&#64;&#64;     cache is disabled for the models.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool enable = 1;</code>
     * @return bool
     */
    public function getEnable()
    {
        return $this->enable;
    }

    /**
     *&#64;&#64;
     *&#64;&#64;  .. cpp::var:: bool enable
     *&#64;&#64;
     *&#64;&#64;     Whether or not to use response cache for the model. If True, the
     *&#64;&#64;     responses from the model are cached and when identical request
     *&#64;&#64;     is encountered, instead of going through the model execution,
     *&#64;&#64;     the response from the cache is utilized. By default, response
     *&#64;&#64;     cache is disabled for the models.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool enable = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnable($var)
    {
        GPBUtil::checkBool($var);
        $this->enable = $var;

        return $this;
    }

}

