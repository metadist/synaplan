<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: grpc_service.proto

namespace Inference;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 *&#64;&#64;
 *&#64;&#64;.. cpp:var:: message RepositoryIndexRequest
 *&#64;&#64;
 *&#64;&#64;   Request message for RepositoryIndex.
 *&#64;&#64;
 *
 * Generated from protobuf message <code>inference.RepositoryIndexRequest</code>
 */
class RepositoryIndexRequest extends \Google\Protobuf\Internal\Message
{
    /**
     *&#64;&#64;  .. cpp:var:: string repository_name
     *&#64;&#64;
     *&#64;&#64;     The name of the repository. If empty the index is returned
     *&#64;&#64;     for all repositories.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string repository_name = 1;</code>
     */
    protected $repository_name = '';
    /**
     *&#64;&#64;  .. cpp:var:: bool ready
     *&#64;&#64;
     *&#64;&#64;     If true returned only models currently ready for inferencing.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool ready = 2;</code>
     */
    protected $ready = false;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $repository_name
     *          &#64;&#64;  .. cpp:var:: string repository_name
     *          &#64;&#64;
     *          &#64;&#64;     The name of the repository. If empty the index is returned
     *          &#64;&#64;     for all repositories.
     *          &#64;&#64;
     *     @type bool $ready
     *          &#64;&#64;  .. cpp:var:: bool ready
     *          &#64;&#64;
     *          &#64;&#64;     If true returned only models currently ready for inferencing.
     *          &#64;&#64;
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\GrpcService::initOnce();
        parent::__construct($data);
    }

    /**
     *&#64;&#64;  .. cpp:var:: string repository_name
     *&#64;&#64;
     *&#64;&#64;     The name of the repository. If empty the index is returned
     *&#64;&#64;     for all repositories.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string repository_name = 1;</code>
     * @return string
     */
    public function getRepositoryName()
    {
        return $this->repository_name;
    }

    /**
     *&#64;&#64;  .. cpp:var:: string repository_name
     *&#64;&#64;
     *&#64;&#64;     The name of the repository. If empty the index is returned
     *&#64;&#64;     for all repositories.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>string repository_name = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setRepositoryName($var)
    {
        GPBUtil::checkString($var, True);
        $this->repository_name = $var;

        return $this;
    }

    /**
     *&#64;&#64;  .. cpp:var:: bool ready
     *&#64;&#64;
     *&#64;&#64;     If true returned only models currently ready for inferencing.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool ready = 2;</code>
     * @return bool
     */
    public function getReady()
    {
        return $this->ready;
    }

    /**
     *&#64;&#64;  .. cpp:var:: bool ready
     *&#64;&#64;
     *&#64;&#64;     If true returned only models currently ready for inferencing.
     *&#64;&#64;
     *
     * Generated from protobuf field <code>bool ready = 2;</code>
     * @param bool $var
     * @return $this
     */
    public function setReady($var)
    {
        GPBUtil::checkBool($var);
        $this->ready = $var;

        return $this;
    }

}

