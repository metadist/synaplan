services:
  # PHP Test Environment
  app-test:
    build:
      context: .
      dockerfile: dev/docker/Dockerfile
    container_name: synaplan-app-test
    extra_hosts:
      - host.docker.internal:${DOCKER_HOST:-host-gateway}
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=testing
      - APP_DEBUG=true
      - DB_HOST=db-test
      - DB_NAME=synaplan_test
      - DB_USER=synaplan_test_user
      - DB_PASSWORD=synaplan_test_password
      - TESTING=true
      - XDEBUG_MODE=coverage,debug
      - XDEBUG_CONFIG=client_host=host.docker.internal client_port=9003
    depends_on:
      db-test:
        condition: service_healthy
      composer-test:
        condition: service_completed_successfully
    restart: "no"
    command: >
      sh -c "
        echo 'Starting test environment...' &&
        echo 'Running PHPUnit tests...' &&
        vendor/bin/phpunit tests/Unit/ --verbose &&
        echo 'All tests completed!' &&
        tail -f /dev/null
      "
    networks:
      - synaplan-test-network

  # Test Database
  db-test:
    image: mariadb:11.8.2
    container_name: synaplan-db-test
    restart: "no"
    environment:
      MYSQL_DATABASE: synaplan_test
      MYSQL_USER: synaplan_test_user
      MYSQL_PASSWORD: synaplan_test_password
      MYSQL_ROOT_PASSWORD: root_test_password
      DB_HOST: localhost
      DB_NAME: synaplan_test
      DB_USER: synaplan_test_user
      DB_PASSWORD: synaplan_test_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_test_data:/var/lib/mysql
      - ./dev/db-loadfiles:/docker-entrypoint-initdb.d
      - ./dev/docker/init-test-db.sh:/docker-entrypoint-initdb.d/00-init-test-db.sh
    healthcheck:
      test: ["CMD", "mariadb", "-h", "localhost", "-u", "root", "-proot_test_password", "-e", "SELECT 1;"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - synaplan-test-network

  # Composer Install for Tests
  composer-test:
    build:
      context: .
      dockerfile: dev/docker/Dockerfile
    container_name: synaplan-composer-test
    working_dir: /var/www/html
    environment:
      - COMPOSER_ALLOW_SUPERUSER=1
      - COMPOSER_PROCESS_TIMEOUT=1600
    volumes:
      - ./:/var/www/html
    command: >
      sh -c "
        echo 'Installing composer dependencies for testing...' &&
        composer install --prefer-dist --no-interaction --dev &&
        echo 'Composer install completed!'
      "
    restart: "no"
    networks:
      - synaplan-test-network

  # PHPUnit Test Runner with HTML Reports
  phpunit:
    build:
      context: .
      dockerfile: dev/docker/Dockerfile
    container_name: synaplan-phpunit
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=testing
      - TESTING=true
      - DB_HOST=db-test
      - DB_NAME=synaplan_test
      - DB_USER=synaplan_test_user
      - DB_PASSWORD=synaplan_test_password
    depends_on:
      db-test:
        condition: service_healthy
      composer-test:
        condition: service_completed_successfully
    command: >
      sh -c "
        echo 'Running PHPUnit with HTML reports...' &&
        mkdir -p reports &&
        vendor/bin/phpunit --testsuite=Unit --testdox-html reports/testdox.html --log-junit reports/junit.xml --colors=always &&
        echo '✅ HTML reports generated!' &&
        echo '📄 TestDox: reports/testdox.html' &&
        echo '🔧 JUnit: reports/junit.xml'
      "
    restart: "no"
    networks:
      - synaplan-test-network

  # Test Coverage Runner (requires Xdebug)
  phpunit-coverage:
    build:
      context: .
      dockerfile: dev/docker/Dockerfile
    container_name: synaplan-phpunit-coverage
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=testing
      - TESTING=true
      - DB_HOST=db-test
      - DB_NAME=synaplan_test
      - DB_USER=synaplan_test_user
      - DB_PASSWORD=synaplan_test_password
      - XDEBUG_MODE=coverage
    depends_on:
      db-test:
        condition: service_healthy
      composer-test:
        condition: service_completed_successfully
    command: >
      sh -c "
        echo 'Running PHPUnit with coverage...' &&
        echo '=================================' &&
        vendor/bin/phpunit --testsuite=Unit --coverage-html coverage --testdox-html testdox.html --log-junit junit.xml --colors=always &&
        echo '=================================' &&
        echo 'Coverage report generated in coverage/ directory!'
      "
    restart: "no"
    networks:
      - synaplan-test-network

  # Integration Test Runner
  integration-tests:
    build:
      context: .
      dockerfile: dev/docker/Dockerfile
    container_name: synaplan-integration-tests
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=testing
      - TESTING=true
      - DB_HOST=db-test
      - DB_NAME=synaplan_test
      - DB_USER=synaplan_test_user
      - DB_PASSWORD=synaplan_test_password
    depends_on:
      db-test:
        condition: service_healthy
      composer-test:
        condition: service_completed_successfully
    command: >
      sh -c "
        echo 'Running Integration Tests...' &&
        echo '============================' &&
        vendor/bin/phpunit --testsuite=Integration --colors=always &&
        echo '============================' &&
        echo 'Integration tests completed!'
      "
    restart: "no"
    networks:
      - synaplan-test-network

  # Feature Test Runner (Full System Tests)
  feature-tests:
    build:
      context: .
      dockerfile: dev/docker/Dockerfile
    container_name: synaplan-feature-tests
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=testing
      - TESTING=true
      - DB_HOST=db-test
      - DB_NAME=synaplan_test
      - DB_USER=synaplan_test_user
      - DB_PASSWORD=synaplan_test_password
    depends_on:
      db-test:
        condition: service_healthy
      composer-test:
        condition: service_completed_successfully
    command: >
      sh -c "
        echo 'Running Feature Tests...' &&
        echo '========================' &&
        vendor/bin/phpunit --testsuite=Feature --colors=always &&
        echo '========================' &&
        echo 'Feature tests completed!'
      "
    restart: "no"
    networks:
      - synaplan-test-network

  # Test Results Dashboard
  test-dashboard:
    build:
      context: .
      dockerfile: dev/docker/Dockerfile
    container_name: synaplan-test-dashboard
    working_dir: /var/www/html
    ports:
      - "8082:80"
    volumes:
      - ./:/var/www/html
    environment:
      - APP_ENV=testing
      - TESTING=true
      - DB_HOST=db-test
      - DB_NAME=synaplan_test
      - DB_USER=synaplan_test_user
      - DB_PASSWORD=synaplan_test_password
    depends_on:
      db-test:
        condition: service_healthy
      composer-test:
        condition: service_completed_successfully
    command: >
      sh -c "
        echo 'Starting Test Dashboard...' &&
        echo 'Running Unit tests and generating HTML reports...' &&
        mkdir -p testdox junit &&
        echo '==============================' &&
        vendor/bin/phpunit --testsuite=Unit --testdox-html testdox.html --log-junit junit.xml --colors=always &&
        echo '==============================' &&
        echo 'All tests completed! HTML reports generated!' &&
        echo '=============================================' &&
        echo '📄 TestDox Report: http://localhost:8082/testdox.html' &&
        echo '🔧 JUnit Report: http://localhost:8082/junit.xml' &&
        echo '🏠 Test Overview: http://localhost:8082/public/test-overview.php' &&
        echo '🚀 Main App: http://localhost:8082/public/' &&
        echo '=============================================' &&
        php -S 0.0.0.0:80 -t .
      "
    restart: "no"
    networks:
      - synaplan-test-network

volumes:
  mysql_test_data:

networks:
  synaplan-test-network:
    driver: bridge
